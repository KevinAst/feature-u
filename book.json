{ 
  "gitbook":     "3.2.2",
  "root":        "./docs",
  "title":       "feature-u",
  "description": "Feature Based Project Organization for React",
  "author":      "Kevin J. Bridges <kevinast@gmail.com> (https://github.com/KevinAst)",
  "structure": { 
    "readme":  "intro.md",
    "summary": "toc.md" 
  },
  "plugins": ["-livereload", "toolbar"],
  "pluginsConfig": {
    "sharing": {
      "facebook":   false,
      "twitter":    false,
      "google":     false,
      "weibo":      false,
      "instapaper": false,
      "vk":         false,
      "all": ["twitter", "facebook", "google"]
    },
    "toolbar": {
        "buttons": [
          {
            "label": "GitHub",
            "icon": "fa fa-github",
            "url": "https://github.com/KevinAst/feature-u"
          },
          {
            "label": "NPM",
            "icon": "fa fa-bullseye",
            "url": "https://www.npmjs.com/package/feature-u"
          }
        ]
    }
  },
  "variables": { 
    "sym": {
      "feature_u":               "**feature-u**"
    },
    "guide": {

      "TODO":                   "?? copied freom action-u ... currently unused",
      "devGuide":               "[**Dev Guide**](/index.html)",

      "start":                  "[`Getting Started`](/start.md)",

      "basics":                 "[`Basics`](/basics.md)",
      "formalTypes":            "[`A Closer Look`](/formalTypes.md)",
      "shapes":                 "[`ActionStruct Shapes`](/shapes.md)",
      "validation":             "[`Parameter Validation`](/validation.md)",
      "default":                "[`Defaulting Parameters`](/default.md)",
      "thunks":                 "[`Thunk Action Creators`](/thunks.md)",

      "promotion":              "[`Action Promotion`](/promotion.md)",
      "actionDoc":              "[`Action Documentation`](/actionDoc.md)",

      "dist":                   "[`Distribution`](/dist.md)",
      "why":                    "[`Why feature-u?`](/why.md)",
      "history":                "[`Revision History`](/history.md)",
      "LICENSE":                "[`MIT License`](/LICENSE.md)"
    },

    "api": {

      "coreApi":                    "[`Core API`](/coreApi.md)",
        "createFeature":            "[`createFeature()`](/api.md#createFeature)",
        "createFeature$":           "[`createFeature({name, [enabled], [publicFace], [appWillStart], [appDidStart], [pluggableAspects]}): Feature`](/api.md#createFeature)",
          "appWillStartCB":         "[`appWillStartCB()`](/api.md#appWillStartCB)",
          "appWillStartCB$":        "[`appWillStartCB({app, curRootAppElm}): rootAppElm || null`](/api.md#appWillStartCB)",
          "appDidStartCB":          "[`appDidStartCB()`](/api.md#appDidStartCB)",
          "appDidStartCB$":         "[`appDidStartCB({app, [appState], [dispatch]}): void`](/api.md#appDidStartCB)",
        "launchApp":                "[`launchApp()`](/api.md#launchApp)",
        "launchApp$":               "[`launchApp({[aspects], features, registerRootAppElm}): App`](/api.md#launchApp)",
          "registerRootAppElmCB":   "[`registerRootAppElmCB()`](/api.md#registerRootAppElmCB)",
          "registerRootAppElmCB$":  "[`registerRootAppElmCB(rootAppElm): void`](/api.md#registerRootAppElmCB)",
        "managedExpansion":         "[`managedExpansion()`](/api.md#managedExpansion)",
        "managedExpansion$":        "[`managedExpansion(managedExpansionCB): managedExpansionCB`](/api.md#managedExpansion)",
          "managedExpansionCB":     "[`managedExpansionCB()`](/api.md#managedExpansionCB)",
          "managedExpansionCB$":    "[`managedExpansionCB(app): AspectContent`](/api.md#managedExpansionCB)",

      "extensionApi":                      "[`Extension API`](/extensionApi.md)",
        "createAspect":                    "[`createAspect()`](/api.md#createAspect)",
        "createAspect$":                   "[`createAspect({see-docs}): Aspect`](/api.md#createAspect)",
          "validateConfigurationMeth":     "[`validateConfigurationMeth()`](/api.md#validateConfigurationMeth)",
          "validateConfigurationMeth$":    "[`validateConfigurationMeth(): string`](/api.md#validateConfigurationMeth)",
          "expandFeatureContentMeth":      "[`expandFeatureContentMeth()`](/api.md#expandFeatureContentMeth)",
          "expandFeatureContentMeth$":     "[`expandFeatureContentMeth(app, feature): string`](/api.md#expandFeatureContentMeth)",
          "validateFeatureContentMeth":    "[`validateFeatureContentMeth()`](/api.md#validateFeatureContentMeth)",
          "validateFeatureContentMeth$":   "[`validateFeatureContentMeth(feature): string`](/api.md#validateFeatureContentMeth)",
          "assembleFeatureContentMeth":    "[`assembleFeatureContentMeth()`](/api.md#assembleFeatureContentMeth)",
          "assembleFeatureContentMeth$":   "[`assembleFeatureContentMeth(app, activeFeatures): void`](/api.md#assembleFeatureContentMeth)",
          "assembleAspectResourcesMeth":   "[`assembleAspectResourcesMeth()`](/api.md#assembleAspectResourcesMeth)",
          "assembleAspectResourcesMeth$":  "[`assembleAspectResourcesMeth(app, aspects): void`](/api.md#assembleAspectResourcesMeth)",
          "injectRootAppElmMeth":          "[`injectRootAppElmMeth()`](/api.md#injectRootAppElmMeth)",
          "injectRootAppElmMeth$":         "[`injectRootAppElmMeth(app, activeFeatures, curRootAppElm): reactElm`](/api.md#injectRootAppElmMeth)",
        "addBuiltInFeatureKeyword":        "[`addBuiltInFeatureKeyword()`](/api.md#addBuiltInFeatureKeyword)",
        "addBuiltInFeatureKeyword$":       "[`addBuiltInFeatureKeyword(keyword): void`](/api.md#addBuiltInFeatureKeyword)"
    },

    "ext": {
      "TODO":                   "?? copied freom action-u ... currently unused",
      "redux":                  "[`redux`](http://redux.js.org/)",
      "actions":                "[`actions`](http://redux.js.org/docs/basics/Actions.html)",
      "actionCreator":          "[`action creator`](http://redux.js.org/docs/basics/Actions.html#action-creators)",
      "actionCreators":         "[`action creators`](http://redux.js.org/docs/basics/Actions.html#action-creators)"
    }
  }
}
